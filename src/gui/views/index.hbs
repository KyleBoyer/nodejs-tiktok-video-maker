<div class="form-container">
    <!-- Progress Step Bar -->
    <div class="progress-line-bar">
        <div class="progress-line"></div>
        <div class="step-indicator" id="indicator1">
            <div class="number">1</div>
            <div class="label">Video</div>
        </div>
        <div class="step-indicator" id="indicator2">
            <div class="number">2</div>
            <div class="label">Audio</div>
        </div>
        <div class="step-indicator" id="indicator3">
            <div class="number">3</div>
            <div class="label">Story</div>
        </div>
        <div class="step-indicator" id="indicator4">
            <div class="number">4</div>
            <div class="label">Other</div>
        </div>
    </div>

    <form id="multiStepForm">
        <!-- Step 1 -->
        <div class="step" id="step1">
            <h2>Video Configs</h2>
            <p><label style="display: block !important;">Background Video URL:
                <input type="url" name="video.url" placeholder="https://www.youtube.com/watch?v=" pattern="https?://.*" required>
            </label></p>
            <p><label style="display: block !important;">Background Video Speed Percentage:
                <input type="number" name="video.speed" min="1" max="10000" value="100" step="1" required>
            </label></p>
            <p><label style="display: block !important;">Background Video Volume Percentage:
                <input type="number" name="video.volume" min="0" max="100" value="0" step="1" required>
            </label></p>
            <p><label style="vertical-align: text-top; height: 0; display: inline-block; margin-right: 5px;">Background Video Loop:</label><label class="switch">
                <input type="checkbox" name="video.loop" checked />
                <span class="slider round"></span>
            </label></p>
            <p><label style="display: block !important;">Final Video Height:
                <input type="number" name="video.height" min="1" value="1920" step="1" required>
            </label></p>
            <p><label style="display: block !important;">Final Video Width:
                <input type="number" name="video.width" min="1" value="1080" step="1" required>
            </label></p>
            <!-- Advanced Options -->
            <div class="advanced-options-step1" style="display:none;">
                <p><label style="display: block !important;">Background Video Resize Method:
                    <select name="video.resize_method" onchange="toggleResizeMethodDependsOn()">
                        <option value="crop" selected>Crop</option>
                        <option value="scale">Scale</option>
                    </select>
                </label></p>
                <p class="depends-on-crop"><label style="display: block !important;">Background Video Crop Style Width:
                    <select name="video.crop_style_width">
                        <option value="center" selected>Center</option>
                        <option value="left">Left</option>
                        <option value="right">Right</option>
                    </select>
                </label></p>
                <p class="depends-on-crop"><label style="display: block !important;">Background Video Crop Style Height:
                    <select name="video.crop_style_height">
                        <option value="center" selected>Center</option>
                        <option value="top">Top</option>
                        <option value="bottom">Bottom</option>
                    </select>
                </label></p>
                <p class="depends-on-scale" style="display:none;"><label style="vertical-align: text-top; height: 0; display: inline-block; margin-right: 5px;">Background Video Scale Pad:</label><label class="switch">
                    <input type="checkbox" name="video.scale_pad" checked />
                    <span class="slider round"></span>
                </label></p>
                <p class="depends-on-scale" style="display:none;"><label style="display: block !important;">Background Video Scale Pad Color:
                    {{!-- <input type="color" name="video.scale_pad_color" value="#000000" required> --}}
                    <div id="scale_pad_color-picker" class="input-group depends-on-scale" style="display:none;">
                        <input name="video.scale_pad_color" type="text" value="#000000" class="form-control input-lg" style="margin-top: 0;" required>
                        <span class="input-group-append">
                            <span class="input-group-text colorpicker-input-addon"><i></i></span>
                        </span>
                    </div>
                </label></p>
                <p><label style="display: block !important;">Background Video Trim Method:
                    <select name="video.trim_method">
                        <option value="random" selected>Random</option>
                        <option value="keep_start">Keep Start</option>
                        <option value="keep_end">Keep End</option>
                    </select>
                </label></p>
                <p><label style="display: block !important;">Final Video Bitrate:
                    <input type="number" name="video.bitrate" min="1" value="25000" placeholder="kB/s" step="1" required>
                </label></p>
                <p><label style="vertical-align: text-top; height: 0; display: inline-block; margin-right: 5px;">Auto-Correct TTS Duration:</label><label class="switch">
                    <input type="checkbox" name="video.autocorrect_tts_duration" checked />
                    <span class="slider round"></span>
                </label></p>
                <p><label style="vertical-align: text-top; height: 0; display: inline-block; margin-right: 5px;">Accurate Render Method:</label><label class="switch">
                    <input type="checkbox" name="video.accurate_render_method" onchange="editAudioBitrate(this)" checked />
                    <span class="slider round"></span>
                </label></p>
                <p><label style="display: block !important;">Final Video Output Format:
                    <select name="video.output_format">
                        <option value="mp4" selected>MP4</option>
                        <option value="webm">WEBM</option>
                    </select>
                </label></p>
            </div>
            <p>
                <button type="button" onclick="toggleAdvancedOptions(this, 'advanced-options-step1')">Show advanced options</button>
            </p>
            <button type="button" onclick="window.location.reload()">Reset Form</button>
            <button type="button" style="float: right;" onclick="nextStep(2)">Next</button>
        </div>

        <!-- Step 2 -->
        <div class="step" id="step2" style="display: none;">
            <h2>Audio Configs</h2>
            <p><label style="display: block !important;">Background Audio URL:
                <input type="url" name="audio.url" placeholder="https://www.youtube.com/watch?v=" pattern="https?://.*" required>
            </label></p>
            <p><label style="display: block !important;">Background Audio Speed Percentage:
                <input type="number" name="audio.speed" min="1" max="10000" value="100" step="1" required>
            </label></p>
            <p><label style="display: block !important;">Background Audio Volume Percentage:
                <input type="number" name="audio.volume" min="0" max="100" value="15" step="1" required>
            </label></p>
            <p><label style="vertical-align: text-top; height: 0; display: inline-block; margin-right: 5px;">Background Audio Loop:</label><label class="switch">
                <input type="checkbox" name="audio.loop" checked />
                <span class="slider round"></span>
            </label></p>
            <!-- Advanced Options -->
            <div class="advanced-options-step2" style="display:none;">
                <p><label style="display: block !important;">Background Audio Trim Method:
                    <select name="audio.trim_method">
                        <option value="random">Random</option>
                        <option value="keep_start" selected>Keep Start</option>
                        <option value="keep_end">Keep End</option>
                    </select>
                </label></p>
                <p><label style="display: block !important;">Background Audio Bitrate:
                    <select name="audio.bitrate" id="audioBitrate">
                        <option value="320" style="display: none;">320 kB/s</option>
                        <option value="256" selected>256 kB/s</option>
                        <option value="224">224 kB/s</option>
                        <option value="192">192 kB/s</option>
                        <option value="160">160 kB/s</option>
                        <option value="128">128 kB/s</option>
                        <option value="112">112 kB/s</option>
                        <option value="96">96 kB/s</option>
                        <option value="80">80 kB/s</option>
                        <option value="64">64 kB/s</option>
                        <option value="48">48 kB/s</option>
                        <option value="40">40 kB/s</option>
                        <option value="32">32 kB/s</option>
                        <option value="24">24 kB/s</option>
                        <option value="16">16 kB/s</option>
                        <option value="8">8 kB/s</option>
                    </select>
                </label></p>
            </div>
            <p>
                <button type="button" onclick="toggleAdvancedOptions(this, 'advanced-options-step2')">Show advanced options</button>
            </p>
            <button type="button" onclick="previousStep(1)">Previous</button>
            <button type="button" style="float: right;" onclick="nextStep(3)">Next</button>
        </div>

        <!-- Step 3 -->
        <div class="step" id="step3" style="display: none;">
            <h2>Story Configs</h2>
            <p><label style="display: block !important;">Story Source:
                <select id="storySource" name="story.source" onchange="showStorySourceSection(this)">
                    <option value="reddit" selected>Reddit</option>
                    <option value="ai">AI</option>
                </select>
            </label></p>
            <div id="redditSourceSection">
                <p><label style="vertical-align: text-top; height: 0; display: inline-block; margin-right: 5px;">Screenshot Reddit Title:</label><label class="switch">
                    <input type="checkbox" name="story.reddit_screenshot_title" checked onchange="toggleRedditScreenshotConfigs(this)" />
                    <span class="slider round"></span>
                </label></p>
                <div id="redditScreenshotConfigs">
                    <p class="advanced-options-step3" style="display:none;"><label style="display: block !important;">Reddit Title Screenshot Theme:
                        <select name="story.reddit_screenshot_title_theme">
                            <option value="dark" selected>Dark</option>
                            <option value="light">Light</option>
                        </select>
                    </label></p>
                    <p class="advanced-options-step3" style="display:none;"><label style="display: block !important;">Reddit Title Screenshot Zoom:
                        <input type="number" name="story.reddit_screenshot_title_zoom" min="0.1" max="10.0" value="2.0" step="0.1" required>
                    </label></p>
                </div>
                <p><label style="vertical-align: text-top; height: 0; display: inline-block; margin-right: 5px;">Reddit Random Story:</label><label class="switch">
                    <input type="checkbox" name="story.reddit_random" onchange="toggleRedditRandomConfigs(this)" />
                    <span class="slider round"></span>
                </label></p>
                <div id="redditNotRandomConfigs">
                    <p><label style="display: block !important;">Reddit Post ID:
                        <input type="text" name="story.reddit_post_id" required>
                    </label></p>
                </div>
                <div id="redditRandomConfigs" style="display: none;">
                    <p><label style="display: block !important;">Reddit Random Subreddits:
                        <input type='text' placeholder='Subreddit Name' name='story.reddit_random_subreddits' style="margin-left: 0px !important; margin-right: 0px !important; margin-top: 0px !important; margin-bottom: 0px !important;">
                    </label></p>
                    <p class="advanced-options-step3" style="display:none;"><label style="display: block !important;">Reddit Random Posts Results Limit:
                        <input type="number" name="story.reddit_random_limit" min="1" value="50" step="1" required>
                    </label></p>
                    <p class="advanced-options-step3" style="display:none;"><label style="display: block !important;">Reddit Random Post Minimum Comments:
                        <input type="number" name="story.reddit_random_min_comments" min="0" value="0" step="1" required>
                    </label></p>
                    <p class="advanced-options-step3" style="display:none;"><label style="display: block !important;">Reddit Random Post Minimum Character Length:
                        <input type="number" name="story.reddit_random_min_length" min="0" max="9007199254740991" value="30" step="1" required>
                    </label></p>
                    <p class="advanced-options-step3" style="display:none;"><label style="display: block !important;">Reddit Random Post Maximum Character Length:
                        <input type="number" name="story.reddit_random_max_length" min="0" max="9007199254740991" value="9007199254740991" step="1" required>
                    </label></p>
                    <p class="advanced-options-step3" style="display:none;"><label style="vertical-align: text-top; height: 0; display: inline-block; margin-right: 5px;">Reddit Random Post Allow NSFW:</label><label class="switch">
                        <input type="checkbox" name="story.reddit_random_allow_nsfw" />
                        <span class="slider round"></span>
                    </label></p>
                    <p class="advanced-options-step3" style="display:none;"><label style="display: block !important;">Reddit Random Post AI Similarity Keywords:
                        <input type='text' placeholder='Similarity Keyword' name='story.reddit_random_ai_similarity' style="margin-left: 0px !important; margin-right: 0px !important; margin-top: 0px !important; margin-bottom: 0px !important;">
                    </label></p>
                </div>
                <p><label style="display: block !important;">Reddit Client ID:
                    <input type="text" name="story.reddit_client_id" required>
                </label></p>
                <p><label style="display: block !important;">Reddit Client Secret:
                    <input type="password" name="story.reddit_client_secret" required>
                </label></p>
                <p><label style="display: block !important;">Reddit Username:
                    <input type="text" name="story.reddit_username" onchange="toggleRedditUserPassOrToken()" required>
                </label></p>
                <p><label style="display: block !important;">Reddit Password:
                    <input type="password" name="story.reddit_password" onchange="toggleRedditUserPassOrToken()" required>
                </label></p>
                <p><label style="display: block !important;">Reddit Refresh Token:
                    <input type="password" name="story.reddit_refresh_token" onchange="toggleRedditUserPassOrToken()">
                </label></p>
                <p class="advanced-options-step3" style="display:none;"><label style="display: block !important;">Reddit User Agent:
                    <input type="text" name="story.reddit_user_agent" value="nodejs-tiktok-video-maker" required>
                </label></p>
            </div>
            <div id="aiSourceSection" style="display: none;">
                
            </div>
            <p>
                <button type="button" onclick="toggleAdvancedOptions(this, 'advanced-options-step3')">Show advanced options</button>
            </p>
            <button type="button" onclick="previousStep(2)">Previous</button>
            <button type="button" style="float: right;" onclick="nextStep(4)">Next</button>
        </div>

        <!-- Step 4 -->
        <div class="step" id="step4" style="display: none;">
            <h2>Step 4</h2>
            <p><label>Question 4: <input type="text" name="question4"></label></p>
            <button type="button" onclick="previousStep(3)">Previous</button>
            <button type="submit" style="float: right;">Submit</button>
        </div>
    </form>
</div>
<script>
    function toggleRedditUserPassOrToken(){
        const screenshotOn = $('input[name="story.reddit_screenshot_title"]').prop('checked');
        const userSet = $('input[name="story.reddit_username"]').val().length > 0;
        const passwordSet = $('input[name="story.reddit_password"]').val().length > 0;
        const tokenSet = $('input[name="story.reddit_refresh_token"]').val().length > 0;
        // Set default state, because user/pass is easier than refresh token
        $('input[name="story.reddit_refresh_token"]').prop('required', false);
        $('input[name="story.reddit_username"]').prop('required', true);
        $('input[name="story.reddit_password"]').prop('required', true);
        if(!screenshotOn){
            if(tokenSet){
                $('input[name="story.reddit_username"]').prop('required', false);
                $('input[name="story.reddit_password"]').prop('required', false);
                $('input[name="story.reddit_refresh_token"]').prop('required', true);
                $('input[name="story.reddit_username"]').removeClass('orange-border');
                $('input[name="story.reddit_password"]').removeClass('orange-border');
                $('input[name="story.reddit_refresh_token"]').removeClass('orange-border');
            } else if(!userSet && !passwordSet){
                $('input[name="story.reddit_username"]').addClass('orange-border');
                $('input[name="story.reddit_password"]').addClass('orange-border');
                $('input[name="story.reddit_refresh_token"]').addClass('orange-border');
            }else{
                $('input[name="story.reddit_username"]').removeClass('orange-border');
                $('input[name="story.reddit_password"]').removeClass('orange-border');
                $('input[name="story.reddit_refresh_token"]').removeClass('orange-border');
            }
        }else{
            $('input[name="story.reddit_username"]').removeClass('orange-border');
            $('input[name="story.reddit_password"]').removeClass('orange-border');
            $('input[name="story.reddit_refresh_token"]').removeClass('orange-border');
        }
    }
    $('input[name="story.reddit_random_subreddits"]').flexdatalist({
        data: [],
        searchDisabled: true,
        searchDelay: 0,
        minLength: 1,
        selectionRequired: false,
        noResultsText: 'Press enter to add "{keyword}"',
        multiple: true,
        toggleSelected: true,
    });
    $('input[name="story.reddit_random_subreddits"]').click(function(event){
        $(event.target.nextElementSibling).find('input').click()
    });
    $('input[name="story.reddit_random_ai_similarity"]').flexdatalist({
        data: [],
        searchDisabled: true,
        searchDelay: 0,
        minLength: 1,
        selectionRequired: false,
        noResultsText: 'Press enter to add "{keyword}"',
        multiple: true,
        toggleSelected: true,
    });
    $('input[name="story.reddit_random_ai_similarity"]').click(function(event){
        $(event.target.nextElementSibling).find('input').click()
    });
    function toggleRedditRandomConfigs(checkboxElement){
        if(checkboxElement.checked){
            $('input[name="story.reddit_post_id"]').prop('required', false);
            $('input[name="story.reddit_random_subreddits"]').prop('required', true);
            $('input[name="story.reddit_random_subreddits"]').next().find('input').prop('required', true);
            $('#redditNotRandomConfigs').slideUp("slow");
            $('#redditRandomConfigs').slideDown("slow");
        }else{
            $('input[name="story.reddit_post_id"]').prop('required', true);
            $('input[name="story.reddit_random_subreddits"]').prop('required', false);
            $('input[name="story.reddit_random_subreddits"]').next().find('input').prop('required', false);
            $('#redditRandomConfigs').slideUp("slow");
            $('#redditNotRandomConfigs').slideDown("slow");
        }
    }
    function toggleRedditScreenshotConfigs(checkboxElement){
        if(checkboxElement.checked){
            $('#redditScreenshotConfigs').slideDown("slow");
        }else{
            $('#redditScreenshotConfigs').slideUp("slow");
        }
        toggleRedditUserPassOrToken()
    }
    function editAudioBitrate(checkboxElement){
        if(checkboxElement.checked){
            if($("#audioBitrate").val() == '320'){
                $("#audioBitrate").val('256');
            }
            $("#audioBitrate option[value=320]").hide();
        }else{
            if($("#audioBitrate").val() == '256'){
                $("#audioBitrate").val('320');
            }
            $("#audioBitrate option[value=320]").show();
        }
    }
    function toggleAdvancedOptions(buttonElement, advancedOptionsDivClass){
        const show = buttonElement.outerText.startsWith('Show');
        if(show){
            $(buttonElement).html('Hide advanced options');
            $('.' + advancedOptionsDivClass).slideDown("slow");
        }else{
            $(buttonElement).html('Show advanced options');
            $('.' + advancedOptionsDivClass).slideUp("slow");
        }
    }
    function showStorySourceSection(storySourceElement){
        if($(storySourceElement).val() == 'ai'){
            const redditInputs = [...document.getElementById('redditSourceSection').getElementsByTagName('input')];
            for(const redditInput of redditInputs){
                const oldRequired = $(redditInput).prop('required');
                if([true, false].includes(oldRequired)){
                    $(redditInput).prop('old_required', oldRequired)
                }
                $(redditInput).prop('required', false)
            }
            const aiInputs = [...document.getElementById('aiSourceSection').getElementsByTagName('input')];
            for(const aiInput of aiInputs){
                const oldRequired = $(aiInput).prop('old_required');
                const currentRequired = $(aiInput).prop('required');
                $(aiInput).prop('required', oldRequired || currentRequired);
            }
            $('#redditSourceSection').slideUp("slow");
            $('#aiSourceSection').slideDown("slow");
        }else{
            const aiInputs = [...document.getElementById('aiSourceSection').getElementsByTagName('input')];
            for(const aiInput of aiInputs){
                const oldRequired = $(aiInput).prop('required');
                if([true, false].includes(oldRequired)){
                    $(aiInput).prop('old_required', oldRequired)
                }
                $(aiInput).prop('required', false)
            }
            const redditInputs = [...document.getElementById('redditSourceSection').getElementsByTagName('input')];
            for(const redditInput of redditInputs){
                const oldRequired = $(redditInput).prop('old_required');
                const currentRequired = $(redditInput).prop('required');
                $(redditInput).prop('required', oldRequired || currentRequired);
            }
            $('#aiSourceSection').slideUp("slow");
            $('#redditSourceSection').slideDown("slow");
        }
    }
    function toggleResizeMethodDependsOn(){
        const showCrop = $('select[name="video.resize_method"]').val() == 'crop';
        if(showCrop){
            $('.depends-on-scale').hide();
            $('.depends-on-crop').show();
        }else{
            $('.depends-on-crop').hide();
            $('.depends-on-scale').show();
        }
    }
    function validateStep(stepId) {
        var inputs = [...document.querySelectorAll('#step' + stepId + ' input')];
        var retVal = true;
        for(const input of inputs){
            const inputValid = input && input.checkValidity();
            retVal = retVal && inputValid;
            if(!inputValid){
                console.log("Input not valid:", input);
            }
        }
        if(retVal){
            document.getElementById('indicator' + stepId).classList.add('valid');
            document.getElementById('indicator' + stepId).classList.remove('invalid');
        }else{
            document.getElementById('indicator' + stepId).classList.add('invalid');
            document.getElementById('indicator' + stepId).classList.remove('valid');
        }
        return retVal;
    }
    var currentStep = 1;
    function nextStep(stepId) {
        if (validateStep(stepId - 1)) {
            showStep(stepId);
        }
    }

    function previousStep(stepId) {
        showStep(stepId);
    }

    function showStep(stepId) {
        var steps = document.getElementsByClassName('step');
        for (var i = 0; i < steps.length; i++) {
            steps[i].style.display = 'none';
        }
        document.getElementById('step' + stepId).style.display = 'block';

        updateStepIndicator(stepId);
        currentStep = stepId;
    }

    function updateStepIndicator(stepId) {
        var indicators = document.getElementsByClassName('step-indicator');
        for (var i = 0; i < indicators.length; i++) {
            indicators[i].classList.remove('active');
            // Update the color based on validation status
            if (i < stepId - 1 || i == currentStep - 1) {
                indicators[i].classList.add(validateStep(i + 1) ? 'valid' : 'invalid');
            }
        }
        document.getElementById('indicator' + stepId).classList.add('active');
    }


    function setupStepIndicatorClicks() {
        var indicators = document.getElementsByClassName('step-indicator');
        for (var i = 0; i < indicators.length; i++) {
            (function (index) {
                indicators[i].addEventListener('click', function () {
                    validateStep(index + 1)
                    showStep(index + 1);
                });
            })(i);
        }
    }

    setupStepIndicatorClicks();
    showStep(1);
    $(function () {
        $('#scale_pad_color-picker').colorpicker({
            format: "hex",
            useAlpha: false
        });
        $('#scale_pad_color-picker > input').on('focus', function(){
            $('#scale_pad_color-picker').colorpicker('show');
        });
        // story.reddit_refresh_token
        // 
    });
</script>